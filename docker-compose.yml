services:
  backend:
    # image: ${DOCKERHUB_USERNAME}/gliner-backend:latest
    build:
      context: ./api
    container_name: gliner-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
      - MONGO_URL=${MONGO_URL}
      - MONGO_DB_NAME=${MONGO_DB_NAME}
      - MONGO_COLLECTION_NAME=${MONGO_COLLECTION_NAME}
      - VITE_API_URL=${VITE_API_URL}
      - KEYCLOAK_SERVER_URL=${KEYCLOAK_SERVER_URL}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - POSTGRES_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/gliner
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - mongo
      - postgres
      - keycloak
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 300s
      timeout: 10s
      retries: 3
 
  frontend:
    # image: ${DOCKERHUB_USERNAME}/gliner-frontend:latest
    build:
      context: ./frontend
      args:
        VITE_API_URL: ${VITE_API_URL}
    container_name: gliner-frontend
    ports:
      - "8080:80"
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_KEYCLOAK_URL=${VITE_KEYCLOAK_URL}
      - VITE_KEYCLOAK_REALM=${VITE_KEYCLOAK_REALM}
      - VITE_KEYCLOAK_CLIENT_ID=${VITE_KEYCLOAK_CLIENT_ID}
    depends_on:
      - backend
      - keycloak
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 300s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:16
    container_name: gliner-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d:ro
    environment:
      - POSTGRES_DB=${POSTGRES_DEFAULT_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DEFAULT_DB}"]
      interval: 300s
      timeout: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.0
    container_name: gliner-keycloak
    restart: on-failure:5
    environment:
      - KC_LOG_LEVEL=info
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres/${POSTGRES_DEFAULT_DB}
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
      - KC_DB_SCHEMA=public
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN_USER}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "8090:8080"
    depends_on:
      - postgres
    command: start-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 300s
      timeout: 10s
      retries: 10
 
  mongo:
    image: mongo:7
    container_name: gliner-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 300s
      timeout: 10s
      retries: 5
 
volumes:
  mongo_data:
  postgres_data:
 
networks:
  default:
    name: gliner-network